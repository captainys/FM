CMOSRESET_CONFIRM		PROC

						MOV		SI,OFFSET CMOSRESET_CONFIRM_1

						CALL	MENU_TRIPLE_CONFIRM
						AND		AH,AH
						JNE		@f

						; RESET {
						CALL	CMOS_ZERO_CLEAR

						MOV		AH,00	; SUPPOSED TO BE CMOS RESET
						; How can I write CALL 		FAR PTR 0FFFBH:0014H
						DB			9AH		; CALLF FFFB:0019
						DW			0019H,0FFFBH

						CALL	CMOS_AFTER_RESET_INSTRUCTION
						; }
@@:
						RET

CMOSRESET_CONFIRM		ENDP



CMOSRESET_CONFIRM_1		DB	"CONFIRM RESET CMOS (DRIVE LETTER ASSIGNMENTS ETC. WILL BE ERASED)",0
						DB	"DON'T RESET CMOS",0
CMOSRESET_CONFIRM_2		DB	"REALLY RESET CMOS (DRIVE LETTER ASSIGNMENTS ETC. WILL BE ERASED)",0
						DB	"DON'T RESET CMOS",0
CMOSRESET_CONFIRM_3		DB	"ABSOLUTELY RESET CMOS (DRIVE LETTER ASSIGNMENTS ETC. WILL BE ERASED)",0
						DB	"DON'T RESET CMOS",0



CMOS_ZERO_CLEAR			PROC
						MOV		DX,IO_CMOS_START
						XOR		AL,AL
@@:
						OUT		DX,AL
						ADD		DX,2
						CMP		DX,IO_CMOS_END
						JL		@b

						RET
CMOS_ZERO_CLEAR			ENDP



CMOS_AFTER_RESET_INSTRUCTION	PROC
						CALL	MENU_WAIT_PAD_RELEASE
						CALL	CLS_5BELOW_HIGH

						MOV		AX,0108H
						MOV		SI,OFFSET RESET_INSTRUCTION
						CALL	DRAW_TEXT31K

@@:
						CALL	READ_PADA
						CMP		AL,3FH
						JE		@b

						RET
CMOS_AFTER_RESET_INSTRUCTION	ENDP

RESET_INSTRUCTION		DB		"CMOS RAM IS CLEAR NOW.",0
						DB		"YOU NEED TO START TOWNS OS ONCE TO FINISH THE RESET PROCESS.",0
						DB		0
						DB		"IF YOU HAVE A CD-BASED SOFTWARE (CAN BE A GAME), START IT ONCE.",0
						DB		0
						DB		"OR,",0
						DB		0
						DB		"YOU CAN BOOT INTO A TOWNS-OS BOOTABLE HARD-DISK PARTITION.",0
						DB		"THE BOOT SEQUENCE WILL STOP IN THE MIDDLE, BUT THAT IS GOOD ENOUGH",0
						DB		"TO COMPLETE THE RESET PROCESS.",0
						DB		0
						DB		"THEN YOU CAN COME BACK TO THIS MENU TO RECONFIGURE",0
						DB		"DRIVE-LETTER ASSIGNMENTS.",0
						DB		0
						DB		"PRESS PAD0 BUTTON TO RETURN",0
						DB		0FFH,0FFH

