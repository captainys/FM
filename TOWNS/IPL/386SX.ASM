; 386SX Support
; Credit to jckarter (https://cohost.org/jckarter/tagged/fm%20towns)
; Thank you for your great help!

CMP_CPU_386SX			PROC
						PUSH	AX
						IN		AL,IO_MACHINE_ID_LOW
						AND		AL,7
						CMP		AL,CPUID_386SX
						POP		AX
						RET

CMP_CPU_386SX			ENDP



DO_386SX_THINGS			PROC
						PUSHFD
						PUSHAD
						PUSH	DS
						PUSH	ES

						CALL	CMP_CPU_386SX
						JNE		DO_386SX_THINGS_RET

						; Is 386SX TOWNS.

						CALL	GET_FBIOS_VERSION
						CMP		EAX,19901001H
						JAE		DO_386SX_THINGS_RET

						PUSH	EAX
						; CALL	TSUGARU_DEBUG_BREAK
						CALL	LOAD_IOSYS_FROM_ROM
						POP		EAX

						CALL	PATCH_ROM_IOSYS


						; CALL	TSUGARU_DEBUG_BREAK


DO_386SX_THINGS_RET:
						POP		ES
						POP		DS
						POPAD
						POPFD
						RET

DO_386SX_THINGS			ENDP



GET_FBIOS_VERSION		PROC
						MOV		AX,40H
						MOV		DS,AX

						CMP		DWORD PTR DS:[0],4F494246H ; "FBIO"
						JNE		GET_FBIOS_VERSION_MAX
						CMP		BYTE PTR DS:[4],53H  ; "S"
						JNE		GET_FBIOS_VERSION_MAX

						MOV		CX,0100H
						SUB		SI,SI

GET_FBIOS_FIND_MULT:
						CMP		DWORD PTR [SI],746c754dH ; "Mult" (Multi-Mode Display Type)
						JE		GET_FBIOS_FOUND_MULT
						INC		SI
						LOOP	GET_FBIOS_FIND_MULT
						JMP		GET_FBIOS_VERSION_MAX
GET_FBIOS_FOUND_MULT:


GET_FBIOS_FIND_19:
						CMP		WORD PTR [SI],3931H ; "19"
						JE		GET_FBIOS_FOUND_19
						INC		SI
						LOOP	GET_FBIOS_FIND_19
						JMP		GET_FBIOS_VERSION_MAX
GET_FBIOS_FOUND_19:
						XOR		EBX,EBX
						MOV		CX,8

GET_FBIOS_VERSION_LOOP:
						LODSB
						CMP		AL,'-'
						JE		GET_FBIOS_VERSION_LOOP

						SUB		AL,'0'
						AND		AL,0FH
						ROL		EBX,4
						OR		BL,AL
						LOOP	GET_FBIOS_VERSION_LOOP

						MOV		EAX,EBX
						RET

GET_FBIOS_VERSION_MAX:
						MOV		EAX,99999999H
						RET

GET_FBIOS_VERSION		ENDP




LOAD_IOSYS_FROM_ROM		PROC
						MOV		ESI,0E00000H
						CLD

LOAD_IOSYS_FROM_ROM_SEARCH:
						PUSH	ESI
						MOV		CX,0040H
						MOV		ES,CX
						MOV		CX,0100H
						XOR		DI,DI
						CALL	READ_HIGHB
						POP		ESI

						CMP		DWORD PTR ES:[0],4F494246H ; "FBIO"
						JE		LOAD_IOSYS_FROM_ROM_FOUND

						ADD		ESI,512
						CMP		ESI,0F00000H
						JB		LOAD_IOSYS_FROM_ROM_SEARCH

						STC
						JMP		LOAD_IOSYS_FROM_ROM_EXIT

LOAD_IOSYS_FROM_ROM_FOUND:
						MOV		CX,6	; 32K times 6=160KB.  Must be good enough
						MOV		AX,0040H

LOAD_IOSYS_FROM_ROM_LOOP:
						PUSH	AX
						PUSH	CX
						PUSH	ESI

						MOV		ES,AX
						MOV		CX,8000H
						XOR		DI,DI
						CALL	READ_HIGHB

						POP		ESI
						POP		CX
						POP		AX

						ADD		AX,0800H
						ADD		ESI,8000H

						LOOP	LOAD_IOSYS_FROM_ROM_LOOP

LOAD_IOSYS_FROM_ROM_EXIT:
						RET

LOAD_IOSYS_FROM_ROM		ENDP


; EAX FBIOS version
PATCH_ROM_IOSYS			PROC
						MOV		BX,0050H
						MOV		DS,BX
						MOV		AX,DS:[0]
						MOV		DS,AX	; Then, DS:0000 is the FBIOS entry address.

						CMP		BYTE PTR DS:[0],0E9H ; JMP rel16
						JNE		ROM_IOSYS_NOT_UX
						MOV		BX,DS:[1]
						ADD		BX,3  ; DS:BX is the jump destination

						; It should look like this
						; 0A3A:000001DA FA                        CLI
						; 0A3A:000001DB 9A22593A0A                CALLF   0A3A:5922

						CMP		WORD PTR DS:[BX],09AFAh ; CLI / CALLF cs:eip
						JNE		ROM_IOSYS_NOT_UX
						CMP		DS:[BX+4],AX
						JNE		ROM_IOSYS_NOT_UX

						MOV		DWORD PTR [BX+1],90909090H  ; NOP FBIOS version check
						MOV		BYTE PTR [BX+5],90H ; NOP
						JMP		PATCHED_ROM_IOSYS
ROM_IOSYS_NOT_UX:

PATCHED_ROM_IOSYS:
						RET
PATCH_ROM_IOSYS			ENDP
